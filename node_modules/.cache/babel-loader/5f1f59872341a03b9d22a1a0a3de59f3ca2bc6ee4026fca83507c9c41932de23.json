{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dark\\\\Desktop\\\\port\\\\portfolio\\\\src\\\\components\\\\pt\\\\CardSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./CardSlider.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardSlider = () => {\n  _s();\n  const cards = [\"React\", \"JavaScript\", \"HTML\", \"CSS\", \"Git\", \"Node.js\"];\n  const [offset, setOffset] = useState(0);\n  const cardWidth = 200; // Largura de cada card\n  const halfLength = Math.ceil(cards.length / 2); // Metade do comprimento dos cards\n  const duplicatedCards = [...cards, ...cards]; // Duplicar os cards para efeito de loop infinito\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setOffset(prevOffset => {\n        const nextOffset = prevOffset + cardWidth; // Mova 200px para a esquerda\n        // Se o próximo offset ultrapassa a largura dos cards, redefine para 0\n        return nextOffset >= cardWidth * halfLength ? 0 : nextOffset;\n      });\n    }, 2000); // Tempo do intervalo de transição\n\n    return () => clearInterval(interval); // Limpa o intervalo ao desmontar o componente\n  }, [cardWidth, halfLength]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-row\",\n        style: {\n          transform: `translateX(-${offset}px)`\n        },\n        children: duplicatedCards.slice(0, halfLength).map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: card\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-row\",\n        style: {\n          transform: `translateX(-${offset}px)`\n        },\n        children: duplicatedCards.slice(halfLength).map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: card\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, index + halfLength, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(CardSlider, \"WzXr9uhGfXxPyY3YDt08E2OJQzY=\");\n_c = CardSlider;\nexport default CardSlider;\nvar _c;\n$RefreshReg$(_c, \"CardSlider\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CardSlider","_s","cards","offset","setOffset","cardWidth","halfLength","Math","ceil","length","duplicatedCards","interval","setInterval","prevOffset","nextOffset","clearInterval","className","children","style","transform","slice","map","card","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dark/Desktop/port/portfolio/src/components/pt/CardSlider.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./CardSlider.css\";\r\n\r\nconst CardSlider = () => {\r\n    const cards = [\"React\", \"JavaScript\", \"HTML\", \"CSS\", \"Git\", \"Node.js\"];\r\n    const [offset, setOffset] = useState(0);\r\n    const cardWidth = 200; // Largura de cada card\r\n    const halfLength = Math.ceil(cards.length / 2); // Metade do comprimento dos cards\r\n    const duplicatedCards = [...cards, ...cards]; // Duplicar os cards para efeito de loop infinito\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setOffset((prevOffset) => {\r\n                const nextOffset = prevOffset + cardWidth; // Mova 200px para a esquerda\r\n                // Se o próximo offset ultrapassa a largura dos cards, redefine para 0\r\n                return nextOffset >= cardWidth * halfLength ? 0 : nextOffset;\r\n            });\r\n        }, 2000); // Tempo do intervalo de transição\r\n\r\n        return () => clearInterval(interval); // Limpa o intervalo ao desmontar o componente\r\n    }, [cardWidth, halfLength]);\r\n\r\n    return (\r\n        <div className=\"slider-container\">\r\n            <div className=\"slider\">\r\n                {/* Renderizando a linha superior */}\r\n                <div className=\"slider-row\" style={{ transform: `translateX(-${offset}px)` }}>\r\n                    {duplicatedCards.slice(0, halfLength).map((card, index) => (\r\n                        <div className=\"slide\" key={index}>\r\n                            <h3>{card}</h3>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {/* Renderizando a linha inferior */}\r\n                <div className=\"slider-row\" style={{ transform: `translateX(-${offset}px)` }}>\r\n                    {duplicatedCards.slice(halfLength).map((card, index) => (\r\n                        <div className=\"slide\" key={index + halfLength}>\r\n                            <h3>{card}</h3>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardSlider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}